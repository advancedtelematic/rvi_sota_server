var searchIndex = {};
searchIndex["sota"] = {"doc":"","items":[[0,"broadcast","sota","",null,null],[3,"Broadcast","sota::broadcast","Retain a list of all peers that should receive the incoming message.",null,null],[11,"new","","Instantiate a new broadcaster for the given `Receiver`.",0,{"inputs":[{"name":"receiver"}],"output":{"name":"broadcast"}}],[11,"start","","Start receiving broadcasting messages and forwarding each to the list\nof peers.",0,null],[11,"subscribe","","Add a new subscriber to the list of peers that will receive the broadcast\nmessages.",0,null],[0,"datatype","sota","",null,null],[0,"auth","sota::datatype","",null,null],[3,"AccessToken","sota::datatype::auth","For storage of the returned access token data following a successful\nauthentication.",null,null],[12,"access_token","","",1,null],[12,"token_type","","",1,null],[12,"expires_in","","",1,null],[12,"scope","","",1,null],[3,"ClientId","","Encapsulates a `String` type for use in `Auth::Credentials`",null,null],[12,"0","","",2,null],[3,"ClientSecret","","Encapsulates a `String` type for use in `Auth::Credentials`",null,null],[12,"0","","",3,null],[3,"ClientCredentials","","Encapsulates the client id and secret used during authentication.",null,null],[12,"client_id","","",4,null],[12,"client_secret","","",4,null],[4,"Auth","","The available authentication types for communicating with the Auth server.",null,null],[13,"None","","",5,null],[13,"Credentials","","",5,null],[13,"Token","","",5,null],[11,"fmt","","",5,null],[11,"clone","","",5,null],[11,"into","","",5,null],[11,"default","","",1,{"inputs":[],"output":{"name":"accesstoken"}}],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",1,null],[11,"decode","","",1,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"into","","",1,null],[11,"decode","","",2,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",2,null],[11,"fmt","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"clone","","",2,null],[11,"decode","","",3,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",3,null],[11,"fmt","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"clone","","",3,null],[11,"decode","","",4,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",4,null],[11,"fmt","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"clone","","",4,null],[0,"command","sota::datatype","",null,null],[4,"Command","sota::datatype::command","System-wide commands that are sent to the interpreter.",null,null],[13,"Authenticate","","Authenticate with the auth server.",6,null],[13,"Shutdown","","Shutdown the client immediately.",6,null],[13,"GetUpdateRequests","","Check for any pending or in-flight updates.",6,null],[13,"ListInstalledPackages","","List the installed packages on the system.",6,null],[13,"ListSystemInfo","","List the system information.",6,null],[13,"StartDownload","","Start downloading an update.",6,null],[13,"StartInstall","","Start installing an update.",6,null],[13,"SendInstalledPackages","","Send a list of packages to the Core server.",6,null],[13,"SendInstalledSoftware","","Send a list of all packages and firmware to the Core server.",6,null],[13,"SendSystemInfo","","Send the system information to the Core server.",6,null],[13,"SendUpdateReport","","Send a package update report to the Core server.",6,null],[11,"clone","","",6,null],[11,"fmt","","",6,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"encode","","",6,null],[11,"decode","","",6,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"fmt","","",6,null],[11,"from_str","","",6,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[0,"config","sota::datatype","",null,null],[3,"Config","sota::datatype::config","An aggregation of all the configuration options parsed at startup.",null,null],[12,"auth","","",7,null],[12,"core","","",7,null],[12,"dbus","","",7,null],[12,"device","","",7,null],[12,"gateway","","",7,null],[12,"network","","",7,null],[12,"rvi","","",7,null],[3,"AuthConfig","","A parsed representation of the [auth] configuration section.",null,null],[12,"server","","",8,null],[12,"client_id","","",8,null],[12,"client_secret","","",8,null],[12,"credentials_file","","",8,null],[3,"CoreConfig","","A parsed representation of the [core] configuration section.",null,null],[12,"server","","",9,null],[3,"DBusConfig","","A parsed representation of the [dbus] configuration section.",null,null],[12,"name","","",10,null],[12,"path","","",10,null],[12,"interface","","",10,null],[12,"software_manager","","",10,null],[12,"software_manager_path","","",10,null],[12,"timeout","","",10,null],[3,"DeviceConfig","","A parsed representation of the [device] configuration section.",null,null],[12,"uuid","","",11,null],[12,"vin","","",11,null],[12,"packages_dir","","",11,null],[12,"package_manager","","",11,null],[12,"system_info","","",11,null],[12,"polling_interval","","",11,null],[12,"certificates_path","","",11,null],[3,"GatewayConfig","","A parsed representation of the [gateway] configuration section.",null,null],[12,"console","","",12,null],[12,"dbus","","",12,null],[12,"http","","",12,null],[12,"rvi","","",12,null],[12,"socket","","",12,null],[12,"websocket","","",12,null],[3,"NetworkConfig","","A parsed representation of the [network] configuration section.",null,null],[12,"http_server","","",13,null],[12,"rvi_edge_server","","",13,null],[12,"socket_commands_path","","",13,null],[12,"socket_events_path","","",13,null],[12,"websocket_server","","",13,null],[3,"RviConfig","","A parsed representation of the [rvi] configuration section.",null,null],[12,"client","","",14,null],[12,"storage_dir","","",14,null],[12,"timeout","","",14,null],[11,"clone","","",7,null],[11,"fmt","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"default","","",7,{"inputs":[],"output":{"name":"config"}}],[11,"load","","",7,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"parse","","",7,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",8,null],[11,"fmt","","",8,null],[11,"eq","","",8,null],[11,"ne","","",8,null],[11,"decode","","",8,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"default","","",8,{"inputs":[],"output":{"name":"authconfig"}}],[11,"clone","","",9,null],[11,"fmt","","",9,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"decode","","",9,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"default","","",9,{"inputs":[],"output":{"name":"coreconfig"}}],[11,"clone","","",10,null],[11,"fmt","","",10,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"decode","","",10,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"default","","",10,{"inputs":[],"output":{"name":"dbusconfig"}}],[11,"clone","","",11,null],[11,"fmt","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"decode","","",11,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"default","","",11,{"inputs":[],"output":{"name":"deviceconfig"}}],[11,"clone","","",12,null],[11,"fmt","","",12,null],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"decode","","",12,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"default","","",12,{"inputs":[],"output":{"name":"gatewayconfig"}}],[11,"clone","","",13,null],[11,"fmt","","",13,null],[11,"eq","","",13,null],[11,"ne","","",13,null],[11,"decode","","",13,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"default","","",13,{"inputs":[],"output":{"name":"networkconfig"}}],[11,"clone","","",14,null],[11,"fmt","","",14,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"decode","","",14,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"default","","",14,{"inputs":[],"output":{"name":"rviconfig"}}],[0,"dbus","sota::datatype","",null,null],[5,"missing_arg","sota::datatype::dbus","Format a `DBus` error message indicating a missing argument.",null,null],[5,"malformed_arg","","Format a `DBus` error message indicating a malformed argument.",null,null],[0,"error","sota::datatype","",null,null],[4,"Error","sota::datatype::error","System-wide errors that are returned from `Result` type failures.",null,null],[13,"Authorization","","",15,null],[13,"Client","","",15,null],[13,"Command","","",15,null],[13,"FromUtf8","","",15,null],[13,"Hyper","","",15,null],[13,"HyperClient","","",15,null],[13,"Io","","",15,null],[13,"JsonDecoder","","",15,null],[13,"JsonEncoder","","",15,null],[13,"JsonParser","","",15,null],[13,"Poison","","",15,null],[13,"Package","","",15,null],[13,"Parse","","",15,null],[13,"Recv","","",15,null],[13,"SendEvent","","",15,null],[13,"SendInterpret","","",15,null],[13,"Socket","","",15,null],[13,"SystemInfo","","",15,null],[13,"TomlParser","","",15,null],[13,"TomlDecode","","",15,null],[13,"UrlParse","","",15,null],[13,"Websocket","","",15,null],[11,"fmt","","",15,null],[11,"from","","",15,{"inputs":[{"name":"poisonerror"}],"output":{"name":"error"}}],[11,"from","","",15,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"error"}}],[11,"from","","",15,{"inputs":[{"name":"hypererror"}],"output":{"name":"error"}}],[11,"from","","",15,{"inputs":[{"name":"ioerror"}],"output":{"name":"error"}}],[11,"from","","",15,{"inputs":[{"name":"jsonencodererror"}],"output":{"name":"error"}}],[11,"from","","",15,{"inputs":[{"name":"jsondecodererror"}],"output":{"name":"error"}}],[11,"from","","",15,{"inputs":[{"name":"recverror"}],"output":{"name":"error"}}],[11,"from","","",15,{"inputs":[{"name":"tomldecodeerror"}],"output":{"name":"error"}}],[11,"from","","",15,{"inputs":[{"name":"urlparseerror"}],"output":{"name":"error"}}],[11,"from","","",15,{"inputs":[{"name":"websocketerror"}],"output":{"name":"error"}}],[11,"from","","",15,{"inputs":[{"name":"hyperclienterror"}],"output":{"name":"error"}}],[11,"from","","",15,{"inputs":[{"name":"senderror"}],"output":{"name":"error"}}],[11,"from","","",15,{"inputs":[{"name":"senderror"}],"output":{"name":"error"}}],[11,"from","","",15,{"inputs":[{"name":"vec"}],"output":{"name":"error"}}],[11,"fmt","","",15,null],[0,"event","sota::datatype","",null,null],[4,"Event","sota::datatype::event","System-wide events that are broadcast to all interested parties.",null,null],[13,"Error","","General error event with a printable representation for debugging.",16,null],[13,"Authenticated","","Authentication was successful.",16,null],[13,"NotAuthenticated","","An operation failed because we are not currently authenticated.",16,null],[13,"UpdatesReceived","","A notification from Core of pending or in-flight updates.",16,null],[13,"UpdateAvailable","","A notification from RVI of a pending update.",16,null],[13,"NoUpdateRequests","","There are no outstanding update requests.",16,null],[13,"FoundInstalledPackages","","The following packages are installed on the device.",16,null],[13,"FoundSystemInfo","","An update on the system information was received.",16,null],[13,"DownloadingUpdate","","Downloading an update.",16,null],[13,"DownloadComplete","","An update was downloaded.",16,null],[13,"DownloadFailed","","Downloading an update failed.",16,null],[13,"InstallingUpdate","","Installing an update.",16,null],[13,"InstallComplete","","An update was installed.",16,null],[13,"InstallFailed","","The installation of an update failed.",16,null],[13,"UpdateReportSent","","An update report was sent to the Core server.",16,null],[13,"InstalledPackagesSent","","A list of installed packages was sent to the Core server.",16,null],[13,"InstalledSoftwareSent","","A list of installed software was sent to the Core server.",16,null],[13,"SystemInfoSent","","The system information was sent to the Core server.",16,null],[13,"InstalledSoftwareNeeded","","A broadcast event requesting an update on externally installed software.",16,null],[11,"eq","","",16,null],[11,"ne","","",16,null],[11,"clone","","",16,null],[11,"fmt","","",16,null],[11,"decode","","",16,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",16,null],[11,"fmt","","",16,null],[0,"json_rpc","sota::datatype","",null,null],[3,"RpcRequest","sota::datatype::json_rpc","Encode the body of a JSON-RPC call.",null,null],[12,"jsonrpc","","",17,null],[12,"id","","",17,null],[12,"method","","",17,null],[12,"params","","",17,null],[3,"RpcOk","","Encapsulates a successful JSON-RPC response.",null,null],[12,"jsonrpc","","",18,null],[12,"id","","",18,null],[12,"result","","",18,null],[3,"ErrorCode","","The error code as [specified by jsonrpc](http://www.jsonrpc.org/specification#error_object).",null,null],[12,"code","","",19,null],[12,"message","","",19,null],[12,"data","","",19,null],[3,"RpcErr","","Encapsulates a failed JSON-RPC response.",null,null],[12,"jsonrpc","","",20,null],[12,"id","","",20,null],[12,"error","","",20,null],[11,"encode","","",17,null],[11,"decode","","",17,{"inputs":[{"name":"__de"}],"output":{"name":"result"}}],[11,"new","","Instantiate a new `RpcRequest` with the default version (2.0) and an id\ngenerated from the current time.",17,{"inputs":[{"name":"str"},{"name":"e"}],"output":{"name":"rpcrequest"}}],[11,"send","","Send a JSON-RPC POST request to the specified URL.",17,null],[11,"encode","","",18,null],[11,"decode","","",18,{"inputs":[{"name":"__dd"}],"output":{"name":"result"}}],[11,"new","","Instantiate a new successful JSON-RPC response type.",18,{"inputs":[{"name":"u64"},{"name":"option"}],"output":{"name":"rpcok"}}],[11,"encode","","",19,null],[11,"decode","","",19,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",20,null],[11,"decode","","",20,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"new","","Instantiate a new `RpcErr` type with the default JSON-RPC version (2.0).",20,{"inputs":[{"name":"u64"},{"name":"errorcode"}],"output":{"name":"self"}}],[11,"invalid_request","","Create a new `RpcErr` with a reason of &quot;Invalid Request&quot;.",20,{"inputs":[{"name":"u64"},{"name":"string"}],"output":{"name":"self"}}],[11,"method_not_found","","Create a new `RpcErr` with a reason of &quot;Method not found&quot;.",20,{"inputs":[{"name":"u64"},{"name":"string"}],"output":{"name":"self"}}],[11,"parse_error","","Create a new `RpcErr` with a reason of &quot;Parse error&quot;.",20,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"invalid_params","","Create a new `RpcErr` with a reason of &quot;Invalid params&quot;.",20,{"inputs":[{"name":"u64"},{"name":"string"}],"output":{"name":"self"}}],[11,"unspecified","","Create a new `RpcErr` with a reason of &quot;Couldn&#39;t handle request&quot;.",20,{"inputs":[{"name":"u64"},{"name":"string"}],"output":{"name":"self"}}],[0,"system_info","sota::datatype","",null,null],[3,"SystemInfo","sota::datatype::system_info","A reference to the command that will report on the system information.",null,null],[11,"clone","","",21,null],[11,"fmt","","",21,null],[11,"eq","","",21,null],[11,"ne","","",21,null],[11,"new","","Instantiate a new type to report on the system information.",21,{"inputs":[{"name":"string"}],"output":{"name":"systeminfo"}}],[11,"report","","Generate a new report of the system information.",21,null],[11,"default","","",21,{"inputs":[],"output":{"name":"systeminfo"}}],[11,"from_str","","",21,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"decode","","",21,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[0,"update_report","sota::datatype","",null,null],[3,"UpdateReport","sota::datatype::update_report","An encodable report of the installation outcome.",null,null],[12,"update_id","","",22,null],[12,"operation_results","","",22,null],[3,"DeviceReport","","Bind the installation outcome report to a specific device.",null,null],[12,"device","","",23,null],[12,"update_report","","",23,null],[3,"OperationResult","","An encodable response of the installation outcome for a particular update ID.",null,null],[12,"id","","",24,null],[12,"result_code","","",24,null],[12,"result_text","","",24,null],[3,"InstalledFirmware","","Encapsulates a single firmware installed on the device.",null,null],[12,"module","","",25,null],[12,"firmware_id","","",25,null],[12,"last_modified","","",25,null],[3,"InstalledPackage","","Encapsulates a single package installed on the device.",null,null],[12,"package_id","","",26,null],[12,"name","","",26,null],[12,"description","","",26,null],[12,"last_modified","","",26,null],[3,"InstalledSoftware","","An encodable list of packages and firmwares to send to RVI.",null,null],[12,"packages","","",27,null],[12,"firmwares","","",27,null],[4,"UpdateResultCode","","Enumerate the possible outcomes when trying to install a package.",null,null],[13,"OK","","Operation executed successfully",28,null],[13,"ALREADY_PROCESSED","","Operation has already been processed",28,null],[13,"DEPENDENCY_FAILURE","","Dependency failure during package install, upgrade, or removal",28,null],[13,"VALIDATION_FAILED","","Update image integrity has been compromised",28,null],[13,"INSTALL_FAILED","","Package installation failed",28,null],[13,"UPGRADE_FAILED","","Package upgrade failed",28,null],[13,"REMOVAL_FAILED","","Package removal failed",28,null],[13,"FLASH_FAILED","","The module loader could not flash its managed module",28,null],[13,"CREATE_PARTITION_FAILED","","Partition creation failed",28,null],[13,"DELETE_PARTITION_FAILED","","Partition deletion failed",28,null],[13,"RESIZE_PARTITION_FAILED","","Partition resize failed",28,null],[13,"WRITE_PARTITION_FAILED","","Partition write failed",28,null],[13,"PATCH_PARTITION_FAILED","","Partition patching failed",28,null],[13,"USER_DECLINED","","User declined the update",28,null],[13,"SOFTWARE_BLACKLISTED","","Software was blacklisted",28,null],[13,"DISK_FULL","","Ran out of disk space",28,null],[13,"NOT_FOUND","","Software package not found",28,null],[13,"OLD_VERSION","","Tried to downgrade to older version",28,null],[13,"INTERNAL_ERROR","","SWM Internal integrity error",28,null],[13,"GENERAL_ERROR","","Other error",28,null],[11,"eq","","",22,null],[11,"ne","","",22,null],[11,"fmt","","",22,null],[11,"clone","","",22,null],[11,"encode","","",22,null],[11,"decode","","",22,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"new","","Instantiate a new report with a vector of installation outcomes.",22,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"updatereport"}}],[11,"single","","Instantiate a new report with a single installation outcome.",22,{"inputs":[{"name":"updaterequestid"},{"name":"updateresultcode"},{"name":"string"}],"output":{"name":"updatereport"}}],[11,"default","","",22,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",23,null],[11,"clone","","",23,null],[11,"encode","","",23,null],[11,"new","","Instantiate a new installation outcome report for a specific device.",23,{"inputs":[{"name":"str"},{"name":"updatereport"}],"output":{"name":"devicereport"}}],[11,"eq","","",28,null],[11,"fmt","","",28,null],[11,"clone","","",28,null],[11,"decode","","",28,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"from_str","","",28,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"encode","","",28,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"fmt","","",24,null],[11,"clone","","",24,null],[11,"encode","","",24,null],[11,"decode","","",24,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"eq","","",25,null],[11,"ne","","",25,null],[11,"fmt","","",25,null],[11,"clone","","",25,null],[11,"encode","","",25,null],[11,"decode","","",25,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"fmt","","",26,null],[11,"clone","","",26,null],[11,"encode","","",26,null],[11,"decode","","",26,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"eq","","",27,null],[11,"ne","","",27,null],[11,"fmt","","",27,null],[11,"clone","","",27,null],[11,"encode","","",27,null],[11,"decode","","",27,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"new","","Instantiate a new list of the software installed on the device.",27,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"installedsoftware"}}],[11,"default","","",27,{"inputs":[],"output":{"name":"self"}}],[0,"update_request","sota::datatype","",null,null],[3,"UpdateRequest","sota::datatype::update_request","A device update request from Core to be installed by the client.",null,null],[12,"requestId","","",29,null],[12,"status","","",29,null],[12,"packageId","","",29,null],[12,"installPos","","",29,null],[12,"createdAt","","",29,null],[3,"Package","","Encodes the name and version of a specific package.",null,null],[12,"name","","",30,null],[12,"version","","",30,null],[3,"UpdateAvailable","","A notification from RVI that a new update is available.",null,null],[12,"update_id","","",31,null],[12,"signature","","",31,null],[12,"description","","",31,null],[12,"request_confirmation","","",31,null],[12,"size","","",31,null],[3,"DownloadStarted","","A JSON-RPC request type to notify RVI that a new package download has started.",null,null],[12,"device","","",32,null],[12,"update_id","","",32,null],[12,"services","","",32,null],[3,"ChunkReceived","","A JSON-RPC request type to notify RVI that a new package chunk was received.",null,null],[12,"device","","",33,null],[12,"update_id","","",33,null],[12,"chunks","","",33,null],[3,"DownloadComplete","","A notification to an external package manager that the package was downloaded.",null,null],[12,"update_id","","",34,null],[12,"update_image","","",34,null],[12,"signature","","",34,null],[3,"DownloadFailed","","A notification to an external package manager that the package download failed.",null,null],[12,"update_id","","",35,null],[12,"reason","","",35,null],[4,"UpdateRequestStatus","","The status of an `UpdateRequest` from Core.",null,null],[13,"Pending","","",36,null],[13,"InFlight","","",36,null],[13,"Canceled","","",36,null],[13,"Failed","","",36,null],[13,"Finished","","",36,null],[6,"UpdateRequestId","","Encapsulate a `String` type as the id of a specific update request.",null,null],[11,"clone","","",29,null],[11,"fmt","","",29,null],[11,"eq","","",29,null],[11,"ne","","",29,null],[11,"encode","","",29,null],[11,"decode","","",29,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",36,null],[11,"fmt","","",36,null],[11,"eq","","",36,null],[11,"encode","","",36,null],[11,"decode","","",36,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",30,null],[11,"fmt","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"encode","","",30,null],[11,"decode","","",30,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"fmt","","",30,null],[11,"clone","","",31,null],[11,"fmt","","",31,null],[11,"eq","","",31,null],[11,"ne","","",31,null],[11,"encode","","",31,null],[11,"decode","","",31,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",32,null],[11,"decode","","",32,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",33,null],[11,"decode","","",33,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",34,null],[11,"fmt","","",34,null],[11,"eq","","",34,null],[11,"ne","","",34,null],[11,"encode","","",34,null],[11,"decode","","",34,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",35,null],[11,"fmt","","",35,null],[11,"eq","","",35,null],[11,"ne","","",35,null],[11,"encode","","",35,null],[11,"decode","","",35,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[0,"url","sota::datatype","",null,null],[3,"Url","sota::datatype::url","Encapsulate a single crate URL with additional methods and traits.",null,null],[12,"0","","",37,null],[4,"Method","","Enumerate the supported HTTP methods.",null,null],[13,"Get","","",38,null],[13,"Post","","",38,null],[13,"Put","","",38,null],[11,"fmt","","",37,null],[11,"clone","","",37,null],[11,"eq","","",37,null],[11,"ne","","",37,null],[11,"join","","Append the string suffix to this URL.",37,null],[11,"inner","","Return the encapsulated crate URL.",37,null],[11,"into","","",37,null],[11,"from_str","","",37,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"decode","","",37,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",37,null],[11,"fmt","","",37,null],[11,"fmt","","",38,null],[11,"clone","","",38,null],[11,"into","","",38,null],[11,"into","","",38,null],[11,"fmt","","",38,null],[0,"gateway","sota","",null,null],[0,"console","sota::gateway","",null,null],[3,"Console","sota::gateway::console","The console gateway is used for REPL-style interaction with the client.",null,null],[11,"initialize","","",39,null],[0,"dbus","sota::gateway","",null,null],[3,"DBus","sota::gateway::dbus","The `DBus` gateway is used with the RVI module for communicating with the\nsystem session bus.",null,null],[12,"dbus_cfg","","",40,null],[12,"itx","","",40,null],[11,"initialize","","",40,null],[11,"pulse","","",40,null],[0,"gateway","sota::gateway","",null,null],[3,"Interpret","sota::gateway::gateway","Encapsulates a `Command` to be sent to the `GlobalInterpreter` for processing,\nwith an optional channel to receive the outcome `Event`.",null,null],[12,"command","","",41,null],[12,"response_tx","","",41,null],[8,"Gateway","","A `Gateway` may send `Command`s to the `GlobalInterpreter`, as well as listen\nto the system-wide `Event` messages.",null,null],[10,"initialize","","",42,null],[11,"start","","",42,null],[11,"pulse","","",42,null],[0,"http","sota::gateway","",null,null],[3,"Http","sota::gateway::http","The `Http` gateway parses `Command`s from the body of incoming requests.",null,null],[12,"server","","",43,null],[11,"initialize","","",43,null],[0,"socket","sota::gateway","",null,null],[3,"Socket","sota::gateway::socket","The `Socket` gateway is used for communication via Unix Domain Sockets.",null,null],[12,"commands_path","","",44,null],[12,"events_path","","",44,null],[3,"EventWrapper","","",null,null],[12,"version","","",45,null],[12,"event","","",45,null],[12,"data","","",45,null],[11,"initialize","","",44,null],[11,"pulse","","",44,null],[11,"fmt","","",45,null],[11,"eq","","",45,null],[11,"ne","","",45,null],[11,"decode","","",45,{"inputs":[{"name":"__de"}],"output":{"name":"result"}}],[11,"encode","","",45,null],[0,"websocket","sota::gateway","",null,null],[3,"Websocket","sota::gateway::websocket","The `Websocket` gateway allows connected clients to listen to `Event`s that\nhappen in the SOTA client.",null,null],[12,"server","","",46,null],[12,"clients","","",46,null],[3,"WebsocketHandler","","",null,null],[11,"initialize","","",46,null],[11,"pulse","","",46,null],[11,"on_message","","",47,null],[11,"on_open","","",47,null],[11,"on_close","","",47,null],[11,"on_error","","",47,null],[0,"http","sota","",null,null],[0,"auth_client","sota::http","",null,null],[3,"AuthClient","sota::http::auth_client","The `AuthClient` will attach an `Authentication` header to each outgoing\nHTTP request.",null,null],[3,"AuthHandler","","The async handler for outgoing HTTP requests.",null,null],[6,"Stream","","The `AuthClient` may be used for both HTTP and HTTPS connections.",null,null],[11,"clone","","",48,null],[11,"default","","",48,{"inputs":[],"output":{"name":"self"}}],[11,"from","","Instantiates a new client ready to make requests for the given `Auth` type.",48,{"inputs":[{"name":"auth"}],"output":{"name":"self"}}],[11,"chan_request","","",48,null],[11,"fmt","","",49,null],[11,"on_request","","",49,null],[11,"on_request_writable","","",49,null],[11,"on_response","","",49,null],[11,"on_response_readable","","",49,null],[11,"on_error","","",49,null],[0,"http_client","sota::http","",null,null],[3,"Request","sota::http::http_client","A simplified representation of an HTTP request for use in the client.",null,null],[12,"method","","",50,null],[12,"url","","",50,null],[12,"body","","",50,null],[6,"Response","","Return the body of an HTTP response on success, or an `Error` otherwise.",null,null],[8,"Client","","Abstracts a particular HTTP Client implementation with the basic methods\nfor sending `Request`s and receiving asynchronous `Response`s via a channel.",null,null],[10,"chan_request","","",51,null],[11,"send_request","","",51,null],[11,"get","","",51,null],[11,"post","","",51,null],[11,"put","","",51,null],[11,"is_testing","","",51,null],[11,"fmt","","",50,null],[0,"http_server","sota::http","",null,null],[3,"ServerHandler","sota::http::http_server","This implements the `hyper::server::Handler` trait so that it can be used\nto handle incoming HTTP connections with `hyper::server::Server`.",null,null],[8,"Server","","An HTTP server handles the incoming headers and request body as well as the\nsetting the response status and body. Other concerns regarding the asynchronous\nevent loop handlers for writing to buffers are abstracted away.",null,null],[10,"headers","","",52,null],[10,"request","","",52,null],[10,"response","","",52,null],[11,"new","","Instantiate a new `ServerHandler` by passing a `Box&lt;Server&lt;T&gt;` reference.",53,{"inputs":[{"name":"box"}],"output":{"name":"self"}}],[11,"on_request","","",53,null],[11,"on_request_readable","","",53,null],[11,"on_response","","",53,null],[11,"on_response_writable","","",53,null],[0,"openssl","sota::http","",null,null],[5,"set_ca_certificates","sota::http::openssl","This function *must* be called before any call is made to `get_openssl()`",null,{"inputs":[{"name":"path"}],"output":null}],[5,"get_openssl","","This function will return a clone of `Openssl` where the CA certificates\nhave been bound with `set_ca_certificates()`.",null,{"inputs":[],"output":{"name":"openssl"}}],[11,"new","alloc::arc","Constructs a new `Arc&lt;T&gt;`.",54,{"inputs":[{"name":"t"}],"output":{"name":"arc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Arc&lt;T&gt;` has exactly one strong reference.",54,{"inputs":[{"name":"arc"}],"output":{"name":"result"}}],[11,"downgrade","","Downgrades the `Arc&lt;T&gt;` to a `Weak&lt;T&gt;` reference.",54,{"inputs":[{"name":"arc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",54,{"inputs":[{"name":"arc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",54,{"inputs":[{"name":"arc"}],"output":{"name":"usize"}}],[11,"make_mut","","Make a mutable reference into the given `Arc&lt;T&gt;`.\nIf the `Arc&lt;T&gt;` has more than one strong reference, or any weak\nreferences, the inner data is cloned.",54,{"inputs":[{"name":"arc"}],"output":{"name":"t"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Arc&lt;T&gt;` has\none strong reference and no weak references.",54,{"inputs":[{"name":"arc"}],"output":{"name":"option"}}],[11,"clone","alloc::boxed","",55,null],[11,"pointer","","",56,null],[11,"make_place","","",56,{"inputs":[],"output":{"name":"intermediatebox"}}],[11,"finalize","","",56,null],[11,"finalize","","",57,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",55,null],[11,"drop","","",56,null],[11,"new","","Allocates memory on the heap and then places `x` into it.",57,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from a raw pointer.",57,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",57,null],[11,"default","","",57,{"inputs":[],"output":{"name":"box"}}],[11,"default","","",57,{"inputs":[],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box&#39;s contents.",57,null],[11,"clone_from","","Copies `source`&#39;s contents into `self` without creating a new allocation.",57,null],[11,"clone","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"partial_cmp","","",57,null],[11,"lt","","",57,null],[11,"le","","",57,null],[11,"ge","","",57,null],[11,"gt","","",57,null],[11,"cmp","","",57,null],[11,"hash","","",57,null],[11,"from","","",57,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",57,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",57,null],[11,"fmt","","",57,null],[11,"fmt","","",57,null],[11,"fmt","","",57,null],[11,"deref","","",57,null],[11,"deref_mut","","",57,null],[11,"next","","",57,null],[11,"size_hint","","",57,null],[11,"next_back","","",57,null],[11,"call_once","","",57,null],[11,"call_once","","",57,null],[11,"clone","","",57,null],[11,"borrow","","",57,null],[11,"borrow_mut","","",57,null],[11,"as_ref","","",57,null],[11,"as_mut","","",57,null],[11,"fmt","alloc::arc","",58,null],[11,"clone","","Makes a clone of the `Arc&lt;T&gt;`.",54,null],[11,"deref","","",54,null],[11,"drop","","Drops the `Arc&lt;T&gt;`.",54,null],[11,"new","","Constructs a new `Weak&lt;T&gt;` without an accompanying instance of T.",58,{"inputs":[],"output":{"name":"weak"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",58,null],[11,"clone","","Makes a clone of the `Weak&lt;T&gt;`.",58,null],[11,"default","","",58,{"inputs":[],"output":{"name":"weak"}}],[11,"drop","","Drops the `Weak&lt;T&gt;`.",58,null],[11,"eq","","Equality for two `Arc&lt;T&gt;`s.",54,null],[11,"ne","","Inequality for two `Arc&lt;T&gt;`s.",54,null],[11,"partial_cmp","","Partial comparison for two `Arc&lt;T&gt;`s.",54,null],[11,"lt","","Less-than comparison for two `Arc&lt;T&gt;`s.",54,null],[11,"le","","&#39;Less-than or equal to&#39; comparison for two `Arc&lt;T&gt;`s.",54,null],[11,"gt","","Greater-than comparison for two `Arc&lt;T&gt;`s.",54,null],[11,"ge","","&#39;Greater-than or equal to&#39; comparison for two `Arc&lt;T&gt;`s.",54,null],[11,"cmp","","",54,null],[11,"fmt","","",54,null],[11,"fmt","","",54,null],[11,"fmt","","",54,null],[11,"default","","",54,{"inputs":[],"output":{"name":"arc"}}],[11,"hash","","",54,null],[11,"from","","",54,{"inputs":[{"name":"t"}],"output":{"name":"arc"}}],[11,"borrow","","",54,null],[11,"as_ref","","",54,null],[11,"new","alloc::rc","Constructs a new `Rc&lt;T&gt;`.",59,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc&lt;T&gt;` has exactly one strong reference.",59,{"inputs":[{"name":"rc"}],"output":{"name":"result"}}],[11,"would_unwrap","","Checks if `Rc::try_unwrap` would return `Ok`.",59,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"downgrade","","Creates a new `Weak&lt;T&gt;` reference from this value.",59,{"inputs":[{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",59,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",59,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak&lt;T&gt;` values that share\nthe same inner value.",59,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc&lt;T&gt;` has\none strong reference and no weak references.",59,{"inputs":[{"name":"rc"}],"output":{"name":"option"}}],[11,"make_mut","","Make a mutable reference into the given `Rc&lt;T&gt;` by cloning the inner\ndata if the `Rc&lt;T&gt;` doesn&#39;t have one strong reference and no weak\nreferences.",59,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",59,null],[11,"drop","","Drops the `Rc&lt;T&gt;`.",59,null],[11,"clone","","Makes a clone of the `Rc&lt;T&gt;`.",59,null],[11,"default","","Creates a new `Rc&lt;T&gt;`, with the `Default` value for `T`.",59,{"inputs":[],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc&lt;T&gt;`s.",59,null],[11,"ne","","Inequality for two `Rc&lt;T&gt;`s.",59,null],[11,"partial_cmp","","Partial comparison for two `Rc&lt;T&gt;`s.",59,null],[11,"lt","","Less-than comparison for two `Rc&lt;T&gt;`s.",59,null],[11,"le","","&#39;Less-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",59,null],[11,"gt","","Greater-than comparison for two `Rc&lt;T&gt;`s.",59,null],[11,"ge","","&#39;Greater-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",59,null],[11,"cmp","","Comparison for two `Rc&lt;T&gt;`s.",59,null],[11,"hash","","",59,null],[11,"fmt","","",59,null],[11,"fmt","","",59,null],[11,"fmt","","",59,null],[11,"from","","",59,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"new","","Constructs a new `Weak&lt;T&gt;` without an accompanying instance of T.",60,{"inputs":[],"output":{"name":"weak"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",60,null],[11,"drop","","Drops the `Weak&lt;T&gt;`.",60,null],[11,"clone","","Makes a clone of the `Weak&lt;T&gt;`.",60,null],[11,"fmt","","",60,null],[11,"default","","",60,{"inputs":[],"output":{"name":"weak"}}],[11,"borrow","","",59,null],[11,"as_ref","","",59,null],[11,"new","alloc::raw_vec","Creates the biggest possible RawVec without allocating. If T has positive\nsize, then this makes a RawVec with capacity 0. If T has 0 size, then it\nit makes a RawVec with capacity `usize::MAX`. Useful for implementing\ndelayed allocation.",61,{"inputs":[],"output":{"name":"rawvec"}}],[11,"with_capacity","","Creates a RawVec with exactly the capacity and alignment requirements\nfor a `[T; cap]`. This is equivalent to calling RawVec::new when `cap` is 0\nor T is zero-sized. Note that if `T` is zero-sized this means you will *not*\nget a RawVec with the requested capacity!",61,{"inputs":[{"name":"usize"}],"output":{"name":"rawvec"}}],[11,"from_raw_parts","","Reconstitutes a RawVec from a pointer and capacity.",61,null],[11,"from_box","","Converts a `Box&lt;[T]&gt;` into a `RawVec&lt;T&gt;`.",61,{"inputs":[{"name":"box"}],"output":{"name":"rawvec"}}],[11,"ptr","","Gets a raw pointer to the start of the allocation. Note that this is\nheap::EMPTY if `cap = 0` or T is zero-sized. In the former case, you must\nbe careful.",61,null],[11,"cap","","Gets the capacity of the allocation.",61,null],[11,"double","","Doubles the size of the type&#39;s backing allocation. This is common enough\nto want to do that it&#39;s easiest to just have a dedicated method. Slightly\nmore efficient logic can be provided for this than the general case.",61,null],[11,"double_in_place","","Attempts to double the size of the type&#39;s backing allocation in place. This is common\nenough to want to do that it&#39;s easiest to just have a dedicated method. Slightly\nmore efficient logic can be provided for this than the general case.",61,null],[11,"reserve_exact","","Ensures that the buffer contains at least enough space to hold\n`used_cap + needed_extra_cap` elements. If it doesn&#39;t already,\nwill reallocate the minimum possible amount of memory necessary.\nGenerally this will be exactly the amount of memory necessary,\nbut in principle the allocator is free to give back more than\nwe asked for.",61,null],[11,"reserve","","Ensures that the buffer contains at least enough space to hold\n`used_cap + needed_extra_cap` elements. If it doesn&#39;t already have\nenough capacity, will reallocate enough space plus comfortable slack\nspace to get amortized `O(1)` behavior. Will limit this behavior\nif it would needlessly cause itself to panic.",61,null],[11,"reserve_in_place","","Attempts to ensure that the buffer contains at least enough space to hold\n`used_cap + needed_extra_cap` elements. If it doesn&#39;t already have\nenough capacity, will reallocate in place enough space plus comfortable slack\nspace to get amortized `O(1)` behaviour. Will limit this behaviour\nif it would needlessly cause itself to panic.",61,null],[11,"shrink_to_fit","","Shrinks the allocation down to the specified amount. If the given amount\nis 0, actually completely deallocates.",61,null],[11,"into_box","","Converts the entire buffer into `Box&lt;[T]&gt;`.",61,null],[11,"unsafe_no_drop_flag_needs_drop","","This is a stupid name in the hopes that someone will find this in the\nnot too distant future and remove it with the rest of\n#[unsafe_no_drop_flag]",61,null],[11,"drop","","Frees the memory owned by the RawVec *without* trying to Drop its contents.",61,null],[0,"test_client","sota::http","",null,null],[3,"TestClient","sota::http::test_client","The `TestClient` will return HTTP responses from an existing list of strings.",null,null],[11,"default","","",62,{"inputs":[],"output":{"name":"self"}}],[11,"from","","Create a new `TestClient` that will return these responses.",62,{"inputs":[{"name":"vec"}],"output":{"name":"testclient"}}],[11,"chan_request","","",62,null],[11,"is_testing","","",62,null],[0,"interpreter","sota","",null,null],[3,"EventInterpreter","sota::interpreter","The `EventInterpreter` listens for `Event`s and optionally responds with\n`Command`s that may be sent to the `CommandInterpreter`.",null,null],[12,"package_manager","","",63,null],[3,"CommandInterpreter","","The `CommandInterpreter` wraps each incoming `Command` inside an `Interpret`\ntype with no response channel for sending to the `GlobalInterpreter`.",null,null],[3,"GlobalInterpreter","","The `GlobalInterpreter` interprets the `Command` inside incoming `Interpret`\nmessages, broadcasting `Event`s globally and (optionally) sending the final\noutcome `Event` to the `Interpret` response channel.",null,null],[12,"config","","",64,null],[12,"token","","",64,null],[12,"http_client","","",64,null],[12,"rvi","","",64,null],[8,"Interpreter","","An `Interpreter` loops over any incoming values, on receipt of which it\ndelegates to the `interpret` function which will respond with output values.",null,null],[10,"interpret","","",65,null],[11,"run","","",65,null],[11,"interpret","","",63,null],[11,"interpret","","",66,null],[11,"interpret","","",64,null],[0,"oauth2","sota","",null,null],[5,"authenticate","sota::oauth2","Authenticate with the specified OAuth2 server to retrieve a new `AccessToken`.",null,{"inputs":[{"name":"url"},{"name":"client"}],"output":{"name":"result"}}],[0,"package_manager","sota","",null,null],[0,"deb","sota::package_manager","",null,null],[5,"installed_packages","sota::package_manager::deb","Returns a list of installed DEB packages with\n`dpkg-query -f=&#39;${Package} ${Version}\\n&#39; -W`.",null,{"inputs":[],"output":{"name":"result"}}],[5,"install_package","","Installs a new DEB package.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[0,"package_manager","sota::package_manager","",null,null],[4,"PackageManager","sota::package_manager::package_manager","An enumeration of the available package managers for querying and installing\nnew packages.",null,null],[13,"Off","","",67,null],[13,"Deb","","",67,null],[13,"Rpm","","",67,null],[13,"File","","",67,null],[12,"filename","sota::package_manager::package_manager::PackageManager","",67,null],[12,"succeeds","","",67,null],[13,"OSTree","sota::package_manager::package_manager","",67,null],[12,"repodir","sota::package_manager::package_manager::PackageManager","",67,null],[5,"parse_package","sota::package_manager::package_manager","",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[6,"InstallOutcome","","The outcome when installing a package as a tuple of the `UpdateResultCode`\nand any stdout/stderr output.",null,null],[11,"clone","","",67,null],[11,"eq","","",67,null],[11,"ne","","",67,null],[11,"fmt","","",67,null],[11,"installed_packages","","Delegates to the package manager specific function for returning a list\nof installed packages.",67,null],[11,"install_package","","Delegates to the package manager specific function for installing a new\npackage on the device.",67,null],[11,"is_installed","","Indicates whether a specific package is installed on the device.",67,null],[11,"extension","","Returns a string representation of the package manager&#39;s extension.",67,null],[11,"from_str","","",67,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"decode","","",67,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[0,"rpm","sota::package_manager","",null,null],[5,"installed_packages","sota::package_manager::rpm","Returns a list of installed RPM packages with\n`rpm -qa ==queryformat ${NAME} ${VERSION}\\n`.",null,{"inputs":[],"output":{"name":"result"}}],[5,"install_package","","Installs a new RPM package.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[0,"tpm","sota::package_manager","",null,null],[3,"TestDir","sota::package_manager::tpm","Encapsulate a directory whose contents will be destroyed when it drops out of scope.",null,null],[12,"0","","",68,null],[5,"assert_rx","","For each item in the list, assert that it equals the next `Receiver` value.",null,null],[5,"installed_packages","","Returns a list of installed packages from a format of `&lt;name&gt; &lt;version&gt;`.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"install_package","","Installs a package to the specified path when succeeds is true, or fails otherwise.",null,{"inputs":[{"name":"str"},{"name":"str"},{"name":"bool"}],"output":{"name":"result"}}],[11,"new_tpm","sota::package_manager::package_manager","Creates a new Test Package Manager that writes to a temporary file.",67,{"inputs":[{"name":"bool"}],"output":{"name":"self"}}],[11,"new","sota::package_manager::tpm","Create a new test directory that will be destroyed when it drops out of scope.",68,{"inputs":[{"name":"str"}],"output":{"name":"testdir"}}],[11,"drop","","",68,null],[0,"otb","sota::package_manager","",null,null],[5,"installed_packages","sota::package_manager::otb","Returns a list of installed `OSTree` packages with\n`otbpkg --repo=${repodir} --query`.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"install_package","","Installs a new `OSTree` package.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[0,"rvi","sota","",null,null],[0,"edge","sota::rvi","",null,null],[3,"Edge","sota::rvi::edge","The HTTP server endpoint for `RVI` client communication.",null,null],[11,"new","","Create a new `Edge` by registering each `RVI` service.",69,{"inputs":[{"name":"services"},{"name":"string"},{"name":"url"}],"output":{"name":"self"}}],[11,"start","","Start the HTTP server listening for incoming RVI client connections.",69,null],[0,"parameters","sota::rvi","",null,null],[3,"Notify","sota::rvi::parameters","",null,null],[3,"Start","","",null,null],[3,"Chunk","","",null,null],[3,"Finish","","",null,null],[3,"Report","","",null,null],[3,"Abort","","",null,null],[8,"Parameter","","Each `Parameter` implementation handles a specific kind of RVI client request,\noptionally responding with an `Event` on completion.",null,null],[10,"handle","","",70,null],[11,"encode","","",71,null],[11,"decode","","",71,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"handle","","",71,null],[11,"encode","","",72,null],[11,"decode","","",72,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"handle","","",72,null],[11,"encode","","",73,null],[11,"decode","","",73,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"handle","","",73,null],[11,"encode","","",74,null],[11,"decode","","",74,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"handle","","",74,null],[11,"encode","","",75,null],[11,"decode","","",75,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"handle","","",75,null],[11,"encode","","",76,null],[11,"decode","","",76,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"handle","","",76,null],[0,"services","sota::rvi","",null,null],[3,"Services","sota::rvi::services","Hold references to RVI service endpoints, currently active `Transfers`, and\nwhere to broadcast outcome `Event`s to.",null,null],[12,"remote","","",77,null],[12,"sender","","",77,null],[12,"transfers","","",77,null],[3,"RemoteServices","","",null,null],[12,"device_id","","",78,null],[12,"rvi_client","","",78,null],[12,"local","","",78,null],[12,"backend","","",78,null],[3,"LocalServices","","",null,null],[12,"start","","",79,null],[12,"abort","","",79,null],[12,"chunk","","",79,null],[12,"finish","","",79,null],[12,"getpackages","","",79,null],[3,"BackendServices","","",null,null],[12,"start","","",80,null],[12,"ack","","",80,null],[12,"report","","",80,null],[12,"packages","","",80,null],[3,"RviMessage","","",null,null],[12,"service_name","","",81,null],[12,"parameters","","",81,null],[12,"timeout","","",81,null],[11,"clone","","",77,null],[11,"new","","Set up a new RVI service handler, pruning any inactive `Transfer`s each second.",77,{"inputs":[{"name":"rviconfig"},{"name":"string"},{"name":"sender"}],"output":{"name":"self"}}],[11,"register_services","","Register each RVI endpoint with the provided registration function which\nshould return a `String` representation of the URL used to contact that\nservice.",77,null],[11,"handle_service","","Handle an incoming message for a specific service endpoint.",77,null],[11,"new","","",78,{"inputs":[{"name":"string"},{"name":"url"}],"output":{"name":"remoteservices"}}],[11,"send_download_started","","",78,null],[11,"send_chunk_received","","",78,null],[11,"send_update_report","","",78,null],[11,"send_installed_software","","",78,null],[11,"encode","","",79,null],[11,"decode","","",79,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",79,null],[11,"encode","","",80,null],[11,"decode","","",80,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",80,null],[11,"encode","","",81,null],[11,"decode","","",81,{"inputs":[{"name":"__de"}],"output":{"name":"result"}}],[11,"new","","",81,{"inputs":[{"name":"str"},{"name":"vec"},{"name":"i64"}],"output":{"name":"rvimessage"}}],[0,"transfers","sota::rvi","",null,null],[3,"Transfers","sota::rvi::transfers","Holds all currently active transfers where each is referenced by `UpdateRequestId`.",null,null],[3,"Transfer","","Holds the details of the transferred chunks relating to an `UpdateRequestId`.",null,null],[12,"update_id","","",82,null],[12,"checksum","","",82,null],[12,"transferred_chunks","","",82,null],[12,"storage_dir","","",82,null],[12,"last_chunk_received","","",82,null],[11,"new","","",83,{"inputs":[{"name":"string"}],"output":{"name":"transfers"}}],[11,"get","","",83,null],[11,"get_mut","","",83,null],[11,"push","","",83,null],[11,"remove","","",83,null],[11,"clear","","",83,null],[11,"prune","","",83,null],[11,"new","","Prepare for the transfer of a new package.",82,{"inputs":[{"name":"string"},{"name":"updaterequestid"},{"name":"string"}],"output":{"name":"transfer"}}],[11,"write_chunk","","Write the received chunk to disk and store metadata inside `Transfer`.",82,null],[11,"assemble_package","","Assemble all received chunks into a complete package.",82,null],[11,"drop","","",82,null],[0,"sota","sota","",null,null],[3,"Sota","sota::sota","Encapsulate the client configuration and HTTP client used for\nsoftware-over-the-air updates.",null,null],[11,"new","","Creates a new instance for Sota communication.",84,{"inputs":[{"name":"config"},{"name":"client"}],"output":{"name":"sota"}}],[11,"get_update_requests","","Query the Core server for any pending or in-flight package updates.",84,null],[11,"download_update","","Download a specific update from the Core server.",84,null],[11,"install_update","","Install an update using the package manager.",84,null],[11,"send_installed_packages","","Send a list of the currently installed packages to the Core server.",84,null],[11,"send_update_report","","Send the outcome of a package update to the Core server.",84,null],[11,"send_system_info","","Send system information from the device to the Core server.",84,null],[11,"from","sota::datatype::update_report","",24,{"inputs":[{"name":"messageitem"}],"output":{"name":"result"}}],[11,"from","","",26,{"inputs":[{"name":"messageitem"}],"output":{"name":"result"}}],[11,"from","","",25,{"inputs":[{"name":"messageitem"}],"output":{"name":"result"}}]],"paths":[[3,"Broadcast"],[3,"AccessToken"],[3,"ClientId"],[3,"ClientSecret"],[3,"ClientCredentials"],[4,"Auth"],[4,"Command"],[3,"Config"],[3,"AuthConfig"],[3,"CoreConfig"],[3,"DBusConfig"],[3,"DeviceConfig"],[3,"GatewayConfig"],[3,"NetworkConfig"],[3,"RviConfig"],[4,"Error"],[4,"Event"],[3,"RpcRequest"],[3,"RpcOk"],[3,"ErrorCode"],[3,"RpcErr"],[3,"SystemInfo"],[3,"UpdateReport"],[3,"DeviceReport"],[3,"OperationResult"],[3,"InstalledFirmware"],[3,"InstalledPackage"],[3,"InstalledSoftware"],[4,"UpdateResultCode"],[3,"UpdateRequest"],[3,"Package"],[3,"UpdateAvailable"],[3,"DownloadStarted"],[3,"ChunkReceived"],[3,"DownloadComplete"],[3,"DownloadFailed"],[4,"UpdateRequestStatus"],[3,"Url"],[4,"Method"],[3,"Console"],[3,"DBus"],[3,"Interpret"],[8,"Gateway"],[3,"Http"],[3,"Socket"],[3,"EventWrapper"],[3,"Websocket"],[3,"WebsocketHandler"],[3,"AuthClient"],[3,"AuthHandler"],[3,"Request"],[8,"Client"],[8,"Server"],[3,"ServerHandler"],[3,"Arc"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"Box"],[3,"Weak"],[3,"Rc"],[3,"Weak"],[3,"RawVec"],[3,"TestClient"],[3,"EventInterpreter"],[3,"GlobalInterpreter"],[8,"Interpreter"],[3,"CommandInterpreter"],[4,"PackageManager"],[3,"TestDir"],[3,"Edge"],[8,"Parameter"],[3,"Notify"],[3,"Start"],[3,"Chunk"],[3,"Finish"],[3,"Report"],[3,"Abort"],[3,"Services"],[3,"RemoteServices"],[3,"LocalServices"],[3,"BackendServices"],[3,"RviMessage"],[3,"Transfer"],[3,"Transfers"],[3,"Sota"]]};
initSearch(searchIndex);
